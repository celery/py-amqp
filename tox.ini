[tox]
envlist =
    {2.7,pypy2.7-6.0,pypy3.5-6.0,3.5,3.6,3.7}-unit
    {2.7,pypy2.7-6.0,pypy3.5-6.0,3.5,3.6,3.7}-integration-rabbitmq
    flake8
    flakeplus
    apicheck
    pydocstyle
requires = tox-docker

[testenv]
deps=
    -r{toxinidir}/requirements/default.txt
    -r{toxinidir}/requirements/test.txt
    -r{toxinidir}/requirements/test-ci.txt

    apicheck,linkcheck: -r{toxinidir}/requirements/docs.txt
    flake8,flakeplus,pydocstyle: -r{toxinidir}/requirements/pkgutils.txt
sitepackages = False
recreate = False
commands =
    unit: py.test -xv --cov=amqp --cov-report=xml --no-cov-on-fail t/unit
    integration: py.test -xv -E rabbitmq t/integration {posargs:-n2}
basepython =
    2.7,flakeplus,flake8,apicheck,linkcheck,pydocstyle: python2.7
    pypy2.7-6.0,pypy3.5-6.0: pypy
    3.5: python3.5
    3.6: python3.6
    3.7: python3.7
install_command = python -m pip --disable-pip-version-check install {opts} {packages}
commands_pre =
    integration-rabbitmq: ./wait_for_rabbitmq.sh
docker =
    integration-rabbitmq: rabbitmq:latest
dockerenv = 
    PYAMQP_INTEGRATION_INSTANCE=1
    RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit tcp_listeners [5671,5672]

[docker:rabbitmq:latest]
healthcheck_cmd = /bin/bash -c 'rabbitmq-diagnostics ping -q'
healthcheck_interval = 10
healthcheck_timeout = 10
healthcheck_retries = 30
healthcheck_start_period = 5

[testenv:apicheck]
commands =
    sphinx-build -b apicheck -d {envtmpdir}/doctrees docs docs/_build/apicheck

[testenv:linkcheck]
commands =
    sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees docs docs/_build/linkcheck

[testenv:flake8]
commands =
    flake8 {toxinidir}/amqp {toxinidir}/t

[testenv:flakeplus]
commands =
    flakeplus --2.7 {toxinidir}/amqp {toxinidir}/t

[testenv:pydocstyle]
commands =
    pydocstyle {toxinidir}/amqp
