Source: python-aioamqp
Section: python
Priority: extra
Maintainer: Matthias Urlichs <matthias@urlichs.de>
Build-Depends: debhelper (>= 9),
               dh-python,
               python3-all,
               python3-setuptools
Build-Depends-Indep: libjs-jquery,
                     python-sphinx (>= 1.0.7+dfsg-1~)
Standards-Version: 3.9.6
X-Python3-Version: >= 3.0
Homepage: https://github.com/smurfix/aio-py-amqp
Vcs-Git: git://github.com/smurfix/aio-py-amqp.git
Vcs-Browser: https://github.com/smurfix/aio-py-amqp

Package: python3-aioamqp
Architecture: all
Depends: ${misc:Depends}, ${python3:Depends}
Suggests: python-aioamqp-doc
Description: Low-level AMQP client (Python3 version)
 This is a Python3-only fork of py-amqp which is a fork of amqplib which
 was originally written by Barry Pederson.
 .
 This library should be API compatible with librabbitmq, with the
 addition that all methods have a *_async variant that is a coroutine.
 Differences from amqplib are:
  * Separate coroutine for reading+dispatching AMQP messages
  * implicit support for timeouts, via asyncio and cancelling
  * Channels are restored after channel error, instead of having to close the
    connection.
  * Support for heartbeats.
  * Supports RabbitMQ extensions:
    - Consumer Cancel Notifications.
    - Publisher confirms.
    - Exchange-to-exchange bindings: exchange_bind / exchange_unbind.
  * Support for basic_return.
  * Uses AMQP 0-9-1 instead of 0-8.
  * Adds Channel.no_ack_consumers to keep track of consumer tags that set the
    no_ack flag.
  * Slightly better at error recovery.

Package: python-aioamqp-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}, ${sphinxdoc:Depends}
Description: Low-level AMQP client (Documentation)
 This is a Python3-only fork of py-amqp which is a fork of amqplib which 
 was originally written by Barry Pederson.
 .
 This library should be API compatible with librabbitmq, with the 
 addition that all methods have a *_async variant that is a coroutine.
 Differences from amqplib are:
  * Separate coroutine for reading+dispatching AMQP messages
  * implicit support for timeouts, via asyncio and cancelling
  * Channels are restored after channel error, instead of having to close the
    connection.
  * Support for heartbeats.
  * Supports RabbitMQ extensions:
    - Consumer Cancel Notifications.
    - Publisher confirms.
    - Exchange-to-exchange bindings: exchange_bind / exchange_unbind.
  * Support for basic_return.
  * Uses AMQP 0-9-1 instead of 0-8.
  * Adds Channel.no_ack_consumers to keep track of consumer tags that set the
    no_ack flag.
  * Slightly better at error recovery.
 .
 This package contains the documentation.
