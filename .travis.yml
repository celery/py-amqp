language: python
sudo: required
dist: xenial
cache:
  - pip: true
  - directories:
    - $HOME/.cargo
    - $TRAVIS_BUILD_DIR/target/debug/incremental
python:
  - '2.7'
  - '3.4'
  - '3.5'
  - '3.6'
  - '3.7'
  - 'pypy2.7-6.0'
  - 'pypy3.5-6.0'

services:
  - rabbitmq

env:
  global:
    PYTHONUNBUFFERED=yes
  matrix:
    - MATRIX_TOXENV=unit
    - MATRIX_TOXENV=integration-rabbitmq
    - MATRIX_TOXENV=unit-pyo3
    - MATRIX_TOXENV=integration-pyo3-rabbitmq

stages:
  - lint
  - test

matrix:
  fast_finish: true
  include:
    - python: 2.7
      env: TOXENV=flake8
      stage: lint
    - python: 2.7
      env: TOXENV=flakeplus
      stage: lint
    - python: 2.7
      env: TOXENV=pydocstyle
      stage: lint
    - python: 2.7
      env: TOXENV=apicheck
      stage: lint
  exclude:
    - python: 'pypy2.7-6.0'
      env: MATRIX_TOXENV=unit-pyo3
    - python: 'pypy2.7-6.0'
      env: MATRIX_TOXENV=integration-pyo3-rabbitmq
    - python: 'pypy3.5-6.0'
      env: MATRIX_TOXENV=unit-pyo3
    - python: 'pypy3.5-6.0'
      env: MATRIX_TOXENV=integration-pyo3-rabbitmq

before_install:
    # - sudo apt install libcurl4-openssl-dev libssl-dev gnutls-dev
    - if [[ -v MATRIX_TOXENV ]]; then export TOXENV=${TRAVIS_PYTHON_VERSION}-${MATRIX_TOXENV}; fi; env
    - |
          if [[ "$TOXENV" == *integration* ]]; then
              sudo echo 'deb https://dl.bintray.com/rabbitmq-erlang/debian xenial main' > /etc/apt/sources.list.d/rabbitmq-bintray.list
              sudo apt-key adv --keyserver "hkps.pool.sks-keyservers.net" --recv-keys "0x6B73A36E6026DFCA"
              wget -O - "https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc" | sudo apt-key add -
              sudo apt update
              sudo apt install rabbitmq-server -y
              sudo systemctl enable rabbitmq-server
              sudo systemctl start rabbitmq-server
          fi
    - |
          if [[ "$TOXENV" == *pyo3* ]]; then
            wget -O rustup.sh https://sh.rustup.rs
            chmod +x rustup.sh
            ./rustup.sh -y
            source $HOME/.cargo/env
            rustup toolchain install nightly
            rustup default nightly
          fi

install:
  - pip --disable-pip-version-check install -U pip setuptools wheel | cat
  - |
          if [[ "$TOXENV" == *pyo3* ]]; then
            pip --disable-pip-version-check install -U tox pyo3-pack 'tox-pyo3>=0.1.4' | cat
          else
            pip --disable-pip-version-check install -U tox | cat
          fi
script: tox -v -- -v
after_success:
  - .tox/$TRAVIS_PYTHON_VERSION/bin/coverage xml
  - .tox/$TRAVIS_PYTHON_VERSION/bin/codecov -e TOXENV
notifications:
  irc:
    channels:
      - "chat.freenode.net#celery"
    on_success: change
    on_failure: change
