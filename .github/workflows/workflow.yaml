# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: AMQP

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_WORKFLOW: true

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', 'pypy3']
        exclude:
          - os: macos-latest
            python-version: 3.6, 3.7
          #- os: windows-latest
          #  python-version: 3.6, 3.7
     # additional service containers to run
    services:
      # postgres service
      rabbitmq:
        # docker hub image
        image: rabbitmq
        # configure the instance
        env:
          RABBITMQ_DEFAULT_USER: craiga
          RABBITMQ_DEFAULT_PASS: security_is_important
        ports:
          - 5432:5432
        # set health checks to wait until service has started
        #options: >-
         # --health_cmd = "rabbitmq-diagnostics ping -q"
         # --health_interval = 10
         # --health_timeout = 10
         # --health_retries = 30
         # --health_start_period = 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ matrix.python-version }}-v1-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ matrix.python-version }}-v1-
    - name: Install dependencies
      run: |
         python -m pip install -r requirements/default.txt \
            -r requirements/test.txt \
            -r requirements/test-ci.txt \
            -r requirements/docs.txt \
            -r requirements/pkgutils.txt

    - name: Run Unit test with tox-docker
      run: |
        PYTHONPATH=. pytest -xv --cov=celery --cov-report=xml --cov-report term t/unit

    - name: Run Integration test with tox-docker
      run: |
        PYTHONPATH=. pytest -xv -E rabbitmq t/integration
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    -   uses: codecov/codecov-action@v1
        with:
            token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
            flags: unittests # optional
            fail_ci_if_error: true # optional (default = false)
            verbose: true # optional (default = false)
